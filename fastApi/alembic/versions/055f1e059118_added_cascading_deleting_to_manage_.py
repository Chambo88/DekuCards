"""Added cascading deleting to manage relationshhips, added some FK relations

Revision ID: 055f1e059118
Revises: 8ba2c8eb043b
Create Date: 2025-04-24 18:08:41.331981

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '055f1e059118'
down_revision: Union[str, None] = '8ba2c8eb043b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_card_node_version_id', 'card', type_='foreignkey')
    op.drop_constraint('fk_card_card_identity', 'card', type_='foreignkey')
    op.create_foreign_key('fk_card_card_identity', 'card', 'card_identity', ['card_identity'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_card_node_version_id', 'card', 'node_version', ['node_version_id'], ['id'], ondelete='CASCADE')
    op.add_column('card_identity', sa.Column('set_identity_id', sa.Uuid(), nullable=False))
    op.drop_constraint('fk_card_identity_set_id', 'card_identity', type_='foreignkey')
    op.create_foreign_key('fk_card_identity_set_identitiy_id', 'card_identity', 'set_identity', ['set_identity_id'], ['id'], ondelete='CASCADE')
    op.drop_column('card_identity', 'set_id')
    op.add_column('node_version', sa.Column('node_id', sa.Uuid(), nullable=False))
    op.create_foreign_key('fk_node_version_node_id', 'node_version', 'node', ['node_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('fk_public_node_node_id', 'public_node', type_='foreignkey')
    op.create_foreign_key('fk_public_node_node_id', 'public_node', 'node', ['node_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('fk_set_set_identity_id', 'set', type_='foreignkey')
    op.drop_constraint('fk_set_node_version_id', 'set', type_='foreignkey')
    op.create_foreign_key('fk_deku_set_set_identity_id', 'set', 'set_identity', ['set_identity_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_deku_set_node_version_id', 'set', 'node_version', ['node_version_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('fk_set_identity_node_id', 'set_identity', type_='foreignkey')
    op.create_foreign_key('fk_set_identity_node_id', 'set_identity', 'node', ['node_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('fk_user_card_user_node_id', 'user_card', type_='foreignkey')
    op.create_foreign_key('fk_user_card_card_identity_id', 'user_card', 'card_identity', ['card_identity_id'], ['id'])
    op.create_foreign_key('fk_user_card_user_node_id', 'user_card', 'user_node', ['user_node_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_user_card_user_id', 'user_card', 'deku_user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_user_card_user_set_id', 'user_card', 'user_set', ['user_set_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('fk_user_node_node_version_id', 'user_node', type_='foreignkey')
    op.drop_constraint('fk_user_node_node_id', 'user_node', type_='foreignkey')
    op.drop_constraint('fk_user_node_user_id', 'user_node', type_='foreignkey')
    op.create_foreign_key('fk_user_node_node_version_id', 'user_node', 'node_version', ['node_version_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_user_node_user_id', 'user_node', 'deku_user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_user_node_node_id', 'user_node', 'node', ['node_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('fk_user_set_user_id', 'user_set', type_='foreignkey')
    op.drop_constraint('fk_user_set_user_node_id', 'user_set', type_='foreignkey')
    op.create_foreign_key('fk_user_set_user_node_id', 'user_set', 'user_node', ['user_node_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_user_set_user_id', 'user_set', 'deku_user', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_user_set_user_id', 'user_set', type_='foreignkey')
    op.drop_constraint('fk_user_set_user_node_id', 'user_set', type_='foreignkey')
    op.create_foreign_key('fk_user_set_user_node_id', 'user_set', 'user_node', ['user_node_id'], ['id'])
    op.create_foreign_key('fk_user_set_user_id', 'user_set', 'deku_user', ['user_id'], ['id'])
    op.drop_constraint('fk_user_node_node_id', 'user_node', type_='foreignkey')
    op.drop_constraint('fk_user_node_user_id', 'user_node', type_='foreignkey')
    op.drop_constraint('fk_user_node_node_version_id', 'user_node', type_='foreignkey')
    op.create_foreign_key('fk_user_node_user_id', 'user_node', 'deku_user', ['user_id'], ['id'])
    op.create_foreign_key('fk_user_node_node_id', 'user_node', 'node', ['node_id'], ['id'])
    op.create_foreign_key('fk_user_node_node_version_id', 'user_node', 'node_version', ['node_version_id'], ['id'])
    op.drop_constraint('fk_user_card_user_set_id', 'user_card', type_='foreignkey')
    op.drop_constraint('fk_user_card_user_id', 'user_card', type_='foreignkey')
    op.drop_constraint('fk_user_card_user_node_id', 'user_card', type_='foreignkey')
    op.drop_constraint('fk_user_card_card_identity_id', 'user_card', type_='foreignkey')
    op.create_foreign_key('fk_user_card_user_node_id', 'user_card', 'user_node', ['user_node_id'], ['id'])
    op.drop_constraint('fk_set_identity_node_id', 'set_identity', type_='foreignkey')
    op.create_foreign_key('fk_set_identity_node_id', 'set_identity', 'node', ['node_id'], ['id'])
    op.drop_constraint('fk_deku_set_node_version_id', 'set', type_='foreignkey')
    op.drop_constraint('fk_deku_set_set_identity_id', 'set', type_='foreignkey')
    op.create_foreign_key('fk_set_node_version_id', 'set', 'node_version', ['node_version_id'], ['id'])
    op.create_foreign_key('fk_set_set_identity_id', 'set', 'set_identity', ['set_identity_id'], ['id'])
    op.drop_constraint('fk_public_node_node_id', 'public_node', type_='foreignkey')
    op.create_foreign_key('fk_public_node_node_id', 'public_node', 'node', ['node_id'], ['id'])
    op.drop_constraint('fk_node_version_node_id', 'node_version', type_='foreignkey')
    op.drop_column('node_version', 'node_id')
    op.add_column('card_identity', sa.Column('set_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint('fk_card_identity_set_identitiy_id', 'card_identity', type_='foreignkey')
    op.create_foreign_key('fk_card_identity_set_id', 'card_identity', 'set', ['set_id'], ['id'])
    op.drop_column('card_identity', 'set_identity_id')
    op.drop_constraint('fk_card_node_version_id', 'card', type_='foreignkey')
    op.drop_constraint('fk_card_card_identity', 'card', type_='foreignkey')
    op.create_foreign_key('fk_card_card_identity', 'card', 'card_identity', ['card_identity'], ['id'])
    op.create_foreign_key('fk_card_node_version_id', 'card', 'node_version', ['node_version_id'], ['id'])
    # ### end Alembic commands ###
